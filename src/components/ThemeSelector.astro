---
---

<div class="dropdown dropdown-top md:dropdown-bottom dropdown-hover">
    <label tabindex="0" class="btn text-lg md:text-2xl btn-ghost pr-2.5 flex-nowrap">
      Tema
      <svg width="8px" height="8px" class="h-2 w-2 fill-current opacity-50 inline-block" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2048 2048">
        <path d="M1799 349l242 241-1017 1017L7 590l242-241 775 775 775-775z"></path>
      </svg>
    </label>
    <ul tabindex="0" class="dropdown-content z-[1] p-2 shadow-xl bg-base-100 bg-opacity-90 rounded-box w-44">
      <li>
        <input type="radio" name="theme-dropdown" class="theme-controller btn btn-sm btn-block btn-ghost justify-start py-2" aria-label="Light" value="emerald" />
      </li>
      <li>
        <input type="radio" name="theme-dropdown" class="theme-controller btn btn-sm btn-block btn-ghost justify-start py-2" aria-label="Secondary" value="fantasy" />
      </li>
    </ul>
  </div>
  
  <script>
    // Theme switching logic
    const themeButtons = document.querySelectorAll('.theme-controller');
    
    // Check for saved theme preference or use default
    const savedTheme = localStorage.getItem('theme') || 'emerald';
    document.documentElement.setAttribute('data-theme', savedTheme);
    
    // Mark the correct radio button as checked
    themeButtons.forEach((btn) => {
      if (btn instanceof HTMLInputElement && btn.value === savedTheme) {
        btn.checked = true;
      }
    });
    
    // Add event listeners for theme switching
    themeButtons.forEach((btn) => {
      btn.addEventListener('change', (e) => {
        if (e.target instanceof HTMLInputElement) {
          const newTheme = e.target.value;
          document.documentElement.setAttribute('data-theme', newTheme);
          localStorage.setItem('theme', newTheme);
        }
      });
    });
  </script>